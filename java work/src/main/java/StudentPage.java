/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import com.mycompany.projectdata.StudentManage;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author hp EliteBook
 */
public class StudentPage extends javax.swing.JFrame {

     private JTextField txtId, txtFirstName, txtLastName, txtEmail, txtSex;
    private JButton btnInsert, btnUpdate, btnDelete;
    private StudentManage studentManage;

    public StudentPage() {
        // Initialize EntityManagerFactory and StudentManage
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("your_persistence_unit_name");
        studentManage = new StudentManage(emf);

        setTitle("Student Operations");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setSize(400, 400);
        setLocationRelativeTo(null);

        // Create UI Components
        JLabel lblId = new JLabel("Student ID:");
        JLabel lblFirstName = new JLabel("First Name:");
        JLabel lblLastName = new JLabel("Last Name:");
        JLabel lblEmail = new JLabel("Email:");
        JLabel lblSex = new JLabel("Sex:");

        txtId = new JTextField(20);
        txtFirstName = new JTextField(20);
        txtLastName = new JTextField(20);
        txtEmail = new JTextField(20);
        txtSex = new JTextField(20);

        btnInsert = new JButton("Insert Student");
        btnUpdate = new JButton("Update Student");
        btnDelete = new JButton("Delete Student");

        // Set Layout
        setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5);

        gbc.gridx = 0; gbc.gridy = 0; add(lblId, gbc);
        gbc.gridx = 1; gbc.gridy = 0; add(txtId, gbc);

        gbc.gridx = 0; gbc.gridy = 1; add(lblFirstName, gbc);
        gbc.gridx = 1; gbc.gridy = 1; add(txtFirstName, gbc);

        gbc.gridx = 0; gbc.gridy = 2; add(lblLastName, gbc);
        gbc.gridx = 1; gbc.gridy = 2; add(txtLastName, gbc);

        gbc.gridx = 0; gbc.gridy = 3; add(lblEmail, gbc);
        gbc.gridx = 1; gbc.gridy = 3; add(txtEmail, gbc);

        gbc.gridx = 0; gbc.gridy = 4; add(lblSex, gbc);
        gbc.gridx = 1; gbc.gridy = 4; add(txtSex, gbc);

        gbc.gridx = 0; gbc.gridy = 5; gbc.gridwidth = 2; add(btnInsert, gbc);
        gbc.gridy = 6; add(btnUpdate, gbc);
        gbc.gridy = 7; add(btnDelete, gbc);

        // Action Listeners
        btnInsert.addActionListener(e -> insertStudent());
        btnUpdate.addActionListener(e -> updateStudent());
        btnDelete.addActionListener(e -> deleteStudent());
    }

    private void insertStudent() {
        Integer id = Integer.parseInt(txtId.getText());
        String fname = txtFirstName.getText();
        String lname = txtLastName.getText();
        String email = txtEmail.getText();
        String sex = txtSex.getText();
        studentManage.insertStudent(id, fname, lname, email, sex);
        JOptionPane.showMessageDialog(this, "Student inserted successfully.");
    }

    private void updateStudent() {
        Integer id = Integer.parseInt(txtId.getText());
        String fname = txtFirstName.getText();
        String lname = txtLastName.getText();
        String email = txtEmail.getText();
        String sex = txtSex.getText();
        studentManage.updateStudent(id, fname, lname, email, sex);
        JOptionPane.showMessageDialog(this, "Student updated successfully.");
    }

    private void deleteStudent() {
        Integer id = Integer.parseInt(txtId.getText());
        studentManage.deleteStudent(id);
        JOptionPane.showMessageDialog(this, "Student deleted successfully.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    // End of variables declaration                   
}
